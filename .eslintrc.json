{
  "rules": {
    "semi": [
      "error",
      "never"
    ],
    "no-extra-semi": "error",
    "quotes": [
      "error",
      "single"
    ],
    "no-console": "off",
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "react/prop-types": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-fragments": [
      "error",
      "syntax"
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react-hooks/exhaustive-deps": "off",
    "react-hooks/rules-of-hooks": "error"
  },
  "extends": [
    "next/core-web-vitals"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "warn",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true
          }
        ]
      }
    } //,
    // {
    //   "files": ["*.js", "*.jsx"],
    //   "rules": {
    //     // Add rules specific to JavaScript files here
    //   }
    // }
  ]
}
